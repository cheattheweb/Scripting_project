#+TITLE: Karen a simple personal assistant
#+AUTHOR: cheattheweb
#+PROPERTY: header-args :tangle main.py

* Who Karen
Karen is a simple python script for a simple personal assistant program that can perform some tasks, like checking the weather, setting a reminder etc.
Note that most of the code is generated using *ChatGpt* and OpenAI Model.
* What is it for ?
Just testing the power of python and doing a hobby project for myself.So, This is a personal project nothing spacial.
* Code
** Modules
1. *speech recognition* is a python library to listen for voice input, uses NLTK to understand the intent of the user's input, and then calls the appropriate function to perform the desired task.
2. The text-to-speech library *pyttsx3* is used to give an audio feedback to the user.
3. *datetime* library is used to do task that uses date & time
4. *requests* for API requests.
#+begin_src python
import speech_recognition as sr
import pyttsx3
import datetime
import requests
#+end_src

** Initialize the recognizer and TTS engine
#+begin_src python
r = sr.Recognizer()

engine = pyttsx3.init()
#+end_src

** Set a reminder
#+begin_src python
def set_reminder(reminder_time):
    current_time = datetime.datetime.now()
    reminder_time = datetime.datetime.strptime(reminder_time, "%Y-%m-%d %H:%M")
    if reminder_time > current_time:
        time_diff = reminder_time - current_time
        engine.say("Reminder set for " + str(time_diff) + " from now")
        engine.runAndWait()
    else:
        engine.say("Invalid reminder time. Please try again.")
        engine.runAndWait()

#+end_src

** Check the weather
#+begin_src python
def check_weather(location):
    weather_api_key = "7d2e36b5da66c9181317fd67e5057edd"
    url = f"https://api.openweathermap.org/data/2.5/weather?q={location}&appid={weather_api_key}"
    response = requests.get(url)
    data = response.json()
    if data["cod"] != "404":
        weather = data["weather"][0]["description"]
        temp = data["main"]["temp"]
        engine.say(f"The weather in {location} is {weather} with a temperature of {temp} degrees Celsius.")
        engine.runAndWait()
    else:
        engine.say("Location not found. Please try again.")
        engine.runAndWait()
#+end_src
** Who is karen ?
#+begin_src python
def who_is_it():
    engine.say("I am a personal assistant. My name is Karen.")
    engine.runAndWait()
#+end_src


** Main function
#+begin_src python
while True:
    with sr.Microphone() as source:
        print("Listening...")
        audio = r.listen(source)
    try:
        text = r.recognize_google(audio)
        print("You said: ", text)
        if "reminder" in text:
            reminder_time = text.split("for")[-1]
            set_reminder(reminder_time)
        elif "who are you" in text.lower():
            who_is_it()
        elif "weather" in text:
            location = text.split("in")[-1]
            check_weather(location)
    except sr.UnknownValueError:
        print("PocketSphinx could not understand audio")
    except sr.RequestError as e:
#+end_src

#+RESULTS:
